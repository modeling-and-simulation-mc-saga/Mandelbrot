package gui;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;


/**
 *
 * @author tadaki
 */
public class DrawPanel extends javax.swing.JPanel 
implements MouseListener, MouseMotionListener
{
    private BufferedImage image;
    private List<GuiEventListener> listeners;
    private Point point;
    private Point point2;
    /**
     * Creates new form DrawPanel
     */
    public DrawPanel() {
        initComponents();
        addMouseListener(this);
        addMouseMotionListener(this);
        listeners = new ArrayList<>();
    }

    public void setImgage(BufferedImage image) {
        this.image = image;
        repaint();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); 
        Graphics2D gg=(Graphics2D)g;
        gg.drawImage(image, null,10,10);
        if(point !=null){
            gg.setColor(Color.red);
            Rectangle2D.Double rect = getRectangle();
            gg.draw(rect);
        }
    }

    public Rectangle2D.Double getRectangle(){
        if(point !=null){
            double x = Math.min(point.x,point2.x);
            double y = Math.min(point.y,point2.y);
            double w = Math.max(Math.abs(point.x-x), Math.abs(point2.x-x));
            double h = Math.max(Math.abs(point.y-y), Math.abs(point2.y-y));
            return new Rectangle2D.Double(x,y,w,h);
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void addGuiEventListener(GuiEventListener listener) {
        listeners.add(listener);
    }
    
    public void removeGuiEventListener(GuiEventListener listener) {
        if(listeners.contains(listener)){
            listeners.remove(listener);
        }
    }
    public void clearGuiEventListener() {
        listeners.clear();
    }
    
    protected void fireStateChanged(GuiEvent e){
        listeners.forEach(li->li.guiChanged(e));
    }
    
    @Override
    public void mouseClicked(MouseEvent e){
        Point p = new Point(e.getX(),e.getY());
        GuiEvent ev = new GuiEvent(e,GuiEvent.EventType.SetCenter);
        ev.setPoint(p);
        fireStateChanged(ev);
    }

    @Override
    public void mousePressed(MouseEvent e) {
        point = new Point(e.getX(),e.getY());
        point2 = new Point(e.getX(),e.getY());
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        point2.setLocation(e.getPoint());
        repaint();
        GuiEvent ev = new GuiEvent(e,GuiEvent.EventType.NewArea);
        ev.setRect(getRectangle());
        fireStateChanged(ev);
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        point = null;
    }

    @Override
    public void mouseExited(MouseEvent e) {
        point = null;
    }

    @Override
    public void mouseDragged(MouseEvent e) {
        point2.setLocation(e.getPoint());
        repaint();
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        point = null;
    }

    public Point getPoint() {
        return point;
    }

    public Point getPoint2() {
        return point2;
    }

    public void clearRect(){
        point = null;
        point2 = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
